// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3550.Robotronix2017;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.CANTalon;

import edu.wpi.first.wpilibj.AnalogGyro;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.RobotDrive;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.TalonSRX;
import edu.wpi.first.wpilibj.VictorSP;
// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.livewindow.LiveWindow;

/**
 * The RobotMap is a mapping from the ports sensors and actuators are wired into
 * to a variable name. This provides flexibility changing wiring, makes checking
 * the wiring easier and significantly reduces the number of magic numbers
 * floating around.
 */
public class RobotMap {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public static CANTalon deplacementleftFrontMotor;
    public static CANTalon deplacementrightFrontMotor;
    public static CANTalon deplacementleftRearMotor;
    public static CANTalon deplacementrightRearMotor;
    public static RobotDrive deplacementRobotDrive41;
    public static VictorSP ramasseurMoteurArriere;
    public static VictorSP ramasseurMoteurAvant;
    public static DoubleSolenoid pistonUpDownGear;
    public static DoubleSolenoid pistonPushGauche;
    public static DoubleSolenoid pistonUpDownArm;
    public static DoubleSolenoid pistonDropGear;
    public static Solenoid solenoidLedGauche;
    public static Solenoid solenoidLedDroite;
    public static VictorSP moteurGrimpeur;
   // public static VictorSP motorTest;
    public static AnalogGyro gyro;
     
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static void init() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    	ramasseurMoteurArriere = new VictorSP(1); //MOTEUR RAMASSEUR AVANT
        LiveWindow.addActuator("Ramasseur", "ramasseurMoteurDroit", ramasseurMoteurArriere);
        
        ramasseurMoteurAvant = new VictorSP(0);
        LiveWindow.addActuator("Ramasseur", "ramasseurMoteurGauche", ramasseurMoteurAvant);
        
       // pistonPushDroit = new DoubleSolenoid(0, 0);
        pistonUpDownGear = new DoubleSolenoid(1,0,1); //correction sur les ports
        LiveWindow.addActuator("Piston", "pistonDroit", pistonUpDownGear);
        
       // pistonPushGauche = new DoubleSolenoid(2, 3);
        //LiveWindow.addActuator("Piston", "pistonGauche", pistonPushGauche);
        
        pistonUpDownArm = new DoubleSolenoid(1,2,3);
        LiveWindow.addActuator("Piston", "pistonLiftDroit", pistonUpDownArm);
        
        pistonDropGear = new DoubleSolenoid(1,4,5);
        LiveWindow.addActuator("Piston", "pistonLiftGauche", pistonDropGear);
        
        solenoidLedGauche = new Solenoid(0,0);
        solenoidLedDroite = new Solenoid(0,1);
        
         deplacementleftFrontMotor = new CANTalon(1);
        LiveWindow.addActuator("Deplacement", "leftFrontMotor", deplacementleftFrontMotor);
        
        deplacementleftRearMotor = new CANTalon(2);
        LiveWindow.addActuator("Deplacement", "rightFrontMotor", deplacementleftRearMotor);
        
        deplacementrightFrontMotor = new CANTalon(3); 
        LiveWindow.addActuator("Deplacement", "leftRearMotor", deplacementrightFrontMotor);
        
        deplacementrightRearMotor = new CANTalon(4);
        LiveWindow.addActuator("Deplacement", "rightRearMotor", deplacementrightRearMotor);
        
        deplacementRobotDrive41 = new RobotDrive(deplacementleftFrontMotor, deplacementleftRearMotor,
              deplacementrightFrontMotor, deplacementrightRearMotor);
        
        moteurGrimpeur = new VictorSP(2);
        LiveWindow.addActuator("Grimper", "moteurGrimper", moteurGrimpeur);
        
        
       /// motorTest = new VictorSP(0);
       // LiveWindow.addActuator("Deplacement", "leftFrontMotor", motorTest);
        
        deplacementRobotDrive41.setSafetyEnabled(true);
        deplacementRobotDrive41.setExpiration(0.1);
        deplacementRobotDrive41.setSensitivity(0.5);
        deplacementRobotDrive41.setMaxOutput(1.0);
        
        gyro = new AnalogGyro(1); // change from analog 0 to analog 1


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }
}
