// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3550.Robotronix2017.subsystems;


import org.usfirst.frc3550.Robotronix2017.RobotMap;
import org.usfirst.frc3550.Robotronix2017.commands.*;
import com.ctre.CANTalon;

import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Solenoid;
import edu.wpi.first.wpilibj.TalonSRX;
import edu.wpi.first.wpilibj.VictorSP;
//import edu.wpi.first.wpilibj.TalonSRX;
import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class GearCollectorSubsystem extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final VictorSP motorCollectorRear = RobotMap.ramasseurMoteurArriere; //Droit
    private final VictorSP motorCollectorFront = RobotMap.ramasseurMoteurAvant; //Gauche
    private final DoubleSolenoid GearPiston = RobotMap.pistonUpDownGear;
   // private final DoubleSolenoid pistonPushGauche = RobotMap.pistonPushGauche;
    private final DoubleSolenoid armPiston = RobotMap.pistonUpDownArm;
    private final DoubleSolenoid pistonDROPgear = RobotMap.pistonDropGear;
    Solenoid   m_RightLed = RobotMap.solenoidLedDroite;
    Solenoid   m_LeftLed = RobotMap.solenoidLedGauche;
    private final DigitalInput GearDetector = RobotMap.GearDetector;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS


    // Put methods for controlling this subsystem
    // here. Call these from Commands.
   
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND


        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
         setDefaultCommand(new RestGearCollectorCommand());
    }
    
    public void stopCollecting(){
    	motorCollectorRear.set(0);
    	motorCollectorFront.set(0);
    }
    
    public void getGear(){
    	motorCollectorRear.set(-0.95);
    	motorCollectorFront.set(-0.55); //rear motor physically
    }  
    
    public void ejectGear(){
    	motorCollectorRear.set(0.5);
    	motorCollectorFront.set(0.5); 
   }
    
    public void pushGearUp(){
    	GearPiston.set(DoubleSolenoid.Value.kReverse);  //Pushes gear up
    	//pistonPushGauche.set(DoubleSolenoid.Value.kForward);
   }
    public void pushGearDown(){
    	GearPiston.set(DoubleSolenoid.Value.kForward); //Pushes gear down
    	//pistonPushGauche.set(DoubleSolenoid.Value.kReverse);
   }
    
    public void pushArmUp(){
    	armPiston.set(DoubleSolenoid.Value.kReverse);  //Brings arm up
    	//pistonDROPgear.set(DoubleSolenoid.Value.kForward);
   } 
    
    public void pushArmDown(){
    	armPiston.set(DoubleSolenoid.Value.kForward); // Brings arm down
    	//pistonDROPgear.set(DoubleSolenoid.Value.kReverse);
   }
    
    public void disableArm(){
    	armPiston.set(DoubleSolenoid.Value.kOff); // disables arm 
    	//pistonDROPgear.set(DoubleSolenoid.Value.kReverse);
   }
    
   public void coverGear(){
	//GearPiston.set(DoubleSolenoid.Value.kOff);  //disables pistons
   	//pistonPushGauche.set(DoubleSolenoid.Value.kOff);
   	//armPiston.set(DoubleSolenoid.Value.kOff);
	pistonDROPgear.set(DoubleSolenoid.Value.kForward);
	   
   }
   
   public void uncoverGear(){
		//GearPiston.set(DoubleSolenoid.Value.kOff);  //disables pistons
	   	//pistonPushGauche.set(DoubleSolenoid.Value.kOff);
	   	//armPiston.set(DoubleSolenoid.Value.kOff);
		pistonDROPgear.set(DoubleSolenoid.Value.kReverse);
		   
	   }
   
   public boolean detectGear(){
	  return GearDetector.get();
	      
   }
   public void turnLedOn(){
  	 m_RightLed.set(true);
  	 m_LeftLed.set(true);
  }
  
  public void turnLedOff(){
 	 m_RightLed.set(false);
 	 m_LeftLed.set(false);
 }
}
   